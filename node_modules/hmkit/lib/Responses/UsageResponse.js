'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _PropertyResponse2 = require('../PropertyResponse');

var _PropertyResponse3 = _interopRequireDefault(_PropertyResponse2);

var _Property = require('../Property');

var _Property2 = _interopRequireDefault(_Property);

var _OptionalProperty = require('../OptionalProperty');

var _OptionalProperty2 = _interopRequireDefault(_OptionalProperty);

var _helpers = require('../helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UsageResponse = function (_PropertyResponse) {
  _inherits(UsageResponse, _PropertyResponse);

  /**
   * @property {Number} averageWeeklyDistance (number) Average weekly distance in km
   * @property {Number} averageWeeklyDistanceLongRun (number) Average weekyl distance, over long term, in km
   * @property {Number} accelerationEvaluation (number) Acceleration evaluation percentage (0..1)
   * @property {Number} drivingStyleEvaluation (number) Driving style's evaluation percentage (0..1)
   * @property {Array} drivingModesActivationPeriods (array) Driving modes activation periods ([{ drivingMode: (string: 'regular|eco|sport|sport_plus|eco_plus'), period: (number) }])
   * @property {Array} drivingModesEnergyConsumptions (array) Driving modes energy consumptions ([{ drivingMode: (string: 'regular|eco|sport|sport_plus|eco_plus'), consumption: (number) }])
   * @property {Number} lastTripEnergyConsumption (number) Energy consumption in the last trip in kWh
   * @property {Number} lastTripFuelConsumption (number) Fuel consumption in the last trip in L
   * @property {Number} mileageAfterLastTrip (number) Mileage after the last trip in km
   * @property {Number} lastTripElectricPortion (number) Portion of the last trip used in electric mode
   * @property {Number} lastTripAverageEnergyRecuperation (number) Energy recuperation rate for last trip, in kWh / 100 km
   * @property {Number} lastTripBatteryRemaining (number) Battery % remaining after last trip (0..1)
   * @property {Date} lastTripDate (date) Last trip date
   * @property {Number} currentFuelConsumption (number) Current fuel consumption formatted in 4-bytes per IEEE 754
   * @property {Number} averageFuelConsumption (number) Average fuel consumption formatted in 4-bytes per IEEE 754
   *
   * @example UsageResponse
    {
      currentFuelConsumption: 8.7,
      averageFuelConsumption: 6.2,
    }
   */

  function UsageResponse(data) {
    _classCallCheck(this, UsageResponse);

    var _this = _possibleConstructorReturn(this, (UsageResponse.__proto__ || Object.getPrototypeOf(UsageResponse)).call(this));

    var properties = [new _Property2.default(0x01, 'averageWeeklyDistance').setDecoder(_helpers.bytesSum), new _Property2.default(0x02, 'averageWeeklyDistanceLongRun').setDecoder(_helpers.bytesSum), new _Property2.default(0x03, 'accelerationEvaluation').setDecoder(_helpers.progressDecoder), new _Property2.default(0x04, 'drivingStyleEvaluation').setDecoder(_helpers.progressDecoder), new _Property2.default(0x05, 'drivingModesActivationPeriods').setOptionalSubProperties('drivingMode', [new _OptionalProperty2.default(0x00, 'regular').setDecoder(_this.activationPeriodDecoder), new _OptionalProperty2.default(0x01, 'eco').setDecoder(_this.activationPeriodDecoder), new _OptionalProperty2.default(0x02, 'sport').setDecoder(_this.activationPeriodDecoder), new _OptionalProperty2.default(0x03, 'sport_plus').setDecoder(_this.activationPeriodDecoder), new _OptionalProperty2.default(0x04, 'eco_plus').setDecoder(_this.activationPeriodDecoder)]), new _Property2.default(0x06, 'drivingModesEnergyConsumptions').setOptionalSubProperties('drivingMode', [new _OptionalProperty2.default(0x00, 'regular').setDecoder(_this.energyConsumptionDecoder), new _OptionalProperty2.default(0x01, 'eco').setDecoder(_this.energyConsumptionDecoder), new _OptionalProperty2.default(0x02, 'sport').setDecoder(_this.energyConsumptionDecoder), new _OptionalProperty2.default(0x03, 'sport_plus').setDecoder(_this.energyConsumptionDecoder), new _OptionalProperty2.default(0x04, 'eco_plus').setDecoder(_this.energyConsumptionDecoder)]), new _Property2.default(0x07, 'lastTripEnergyConsumption').setDecoder((0, _helpers.getRoundedIeee754ToBase10)(1)), new _Property2.default(0x08, 'lastTripFuelConsumption').setDecoder((0, _helpers.getRoundedIeee754ToBase10)(1)), new _Property2.default(0x09, 'mileageAfterLastTrip').setDecoder(_helpers.bytesSum), new _Property2.default(0x0a, 'lastTripElectricPortion').setDecoder(_helpers.bytesSum), new _Property2.default(0x0b, 'lastTripAverageEnergyRecuperation').setDecoder((0, _helpers.getRoundedIeee754ToBase10)(2)), new _Property2.default(0x0c, 'lastTripBatteryRemaining').setDecoder(_helpers.progressDecoder), new _Property2.default(0x0d, 'lastTripDate').setDecoder(_helpers.dateDecoder), new _Property2.default(0x0e, 'averageFuelConsumption').setDecoder((0, _helpers.getRoundedIeee754ToBase10)(2)), new _Property2.default(0x0f, 'currentFuelConsumption').setDecoder((0, _helpers.getRoundedIeee754ToBase10)(2))];

    _this.parse(data, properties);
    return _this;
  }

  _createClass(UsageResponse, [{
    key: 'activationPeriodDecoder',
    value: function activationPeriodDecoder(bytes) {
      return {
        period: (0, _helpers.progressDecoder)(bytes)
      };
    }
  }, {
    key: 'energyConsumptionDecoder',
    value: function energyConsumptionDecoder(bytes) {
      return {
        consumption: (0, _helpers.getRoundedIeee754ToBase10)(1)(bytes)
      };
    }
  }]);

  return UsageResponse;
}(_PropertyResponse3.default);

UsageResponse.identifier = [0x00, 0x68];
exports.default = UsageResponse;